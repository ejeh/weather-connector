{"version":3,"sources":["components/AppBarCollapse.js","snackBar/index.js","components/Search.js","components/Main.js","App.js","serviceWorker.js","index.js","assets/img/icon-weather.png"],"names":["useStyle","makeStyles","theme","root","display","MenuIcon","breakpoints","down","marginLeft","only","title1","borderRadius","backgroundColor","padding","color","fontSize","fontWeight","title2","border","buttonBar","hide","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItem","spacing","mixins","toolbar","justifyContent","AppBarCollapse","classes","useTheme","React","useState","open","setOpen","className","IconButton","aria-label","edge","onClick","clsx","Drawer","variant","anchor","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Button","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","green","palette","dark","amber","icon","iconVariant","opacity","marginRight","unit","message","alignItems","props","onClose","other","Icon","SnackbarContent","classNames","aria-describedby","id","action","close","initialState","city","response","snackBarOpen","snackBarMessage","snackBarVariant","search","state","handleChange","event","target","name","value","setState","handleData","axios","get","then","res","data","catch","err","handleSubmit","e","preventDefault","clearState","onCloseHandler","renderData","today","Date","day","getDay","hour","getHours","year","getFullYear","minute","getMinutes","Typography","style","fontFamily","sys","country","marginTop","src","weather","alt","height","JSON","stringify","main","temp","description","humidity","wind","speed","this","Paper","component","iconButton","InputBase","input","placeholder","onChange","type","divider","orientation","Snackbar","anchorOrigin","vertical","horizontal","Component","flex","margin","flexGrow","title","CssBaseline","AppBar","Toolbar","textAlign","App","path","Main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2de58edd.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n    Drawer,\n    IconButton,\n    List, ListItem,\n    ListItemIcon,\n    ListItemText,\n    Divider,\n    Button,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n\nconst drawerWidth = 240\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n    },\n    MenuIcon: {\n        [theme.breakpoints.down(\"sm\")]: {\n            marginLeft: \"500px\"\n        },\n\n        [theme.breakpoints.only(\"xs\")]: {\n            marginLeft: \"226px\"\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            display: \"none\",\n\n        },\n        color: \"white\",\n        marginLeft: \"220px\",\n\n    },\n    title1: {\n        marginLeft: \"20px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#eadb07\",\n        padding: \"10px 25px\",\n        color: \"#018e1a\",\n        fontSize: \"10px\",\n        fontWeight: \"bolder\"\n\n    },\n    title2: {\n        border: \"1px solid #f5f4f0\",\n        marginLeft: \"20px\",\n        borderRadius: \"30px\",\n        padding: \"5px 15px\",\n        color: \"#f5f4f0\",\n    },\n    buttonBar: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\"\n        }\n    },\n    hide: {\n        display: \"none\"\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItem: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-start\"\n    }\n}));\n\nconst AppBarCollapse = () => {\n    const classes = useStyle();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false)\n\n    const handleDrawerOpen = () => {\n        setOpen(true)\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false)\n    }\n    return (\n        <div className={classes.root}>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                onClick={handleDrawerOpen}\n                className={clsx(open && classes.hide, [classes.MenuIcon])}\n\n            >\n                <MenuIcon />\n            </IconButton>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n            // ModalProps={{\n            //     keepMounted: true\n            // }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {['About Us', \"How It Works\", \"Contact Us\", \"FAQ\", \"FEDPAY\"].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {[\"Sign In\", \"Download App\"].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <div className={classes.buttonBar}>\n\n                <Button\n                    className={classes.title2}\n                >\n                    Sign in\n\n                  </Button>\n\n                <Button\n                    className={classes.title1}\n                >\n                    Download App\n                    </Button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default AppBarCollapse;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nexport default withStyles(styles1)(MySnackbarContent);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport weather from \"../assets/img/icon-weather.png\";\nimport MysnackBar from \"../snackBar\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst Styles = theme => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n});\n\nconst initialState = {\n  city: \"\",\n  response: \"\",\n  snackBarOpen: false,\n  snackBarMessage: \"\",\n  snackBarVariant: \"error\"\n};\n\nclass search extends Component {\n  state = {\n    ...initialState\n  };\n\n  clearState() {\n    this.setState({ ...initialState });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleData = city => {\n    axios\n      .get(`/api/v1/weather/search?q=${city}`)\n      .then(res => {\n        if (res)\n          this.setState({\n            response: res.data.data,\n            snackBarOpen: true,\n            snackBarVariant: \"success\",\n            snackBarMessage: res.data.message\n          });\n      })\n      .catch(err => {\n        if (err) {\n          this.setState({\n            snackBarOpen: true,\n            snackBarVariant: \"error\",\n            snackBarMessage: err.message\n          });\n        }\n      });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { city } = this.state;\n    if (city) {\n      this.handleData(city);\n    }\n    this.clearState();\n  };\n\n  onCloseHandler = () => {\n    this.setState({\n      snackBarOpen: false\n    });\n  };\n\n  renderData = () => {\n    const { response } = this.state;\n    const today = new Date();\n    const day = today.getDay();\n    const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n    const hour = today.getHours();\n    const year = today.getFullYear();\n    const minute = today.getMinutes();\n\n    if (response) {\n      return (\n        <div>\n          <Typography\n            variant=\"body1\"\n            style={{ fontFamily: \"-webkit-body\", fontWeight: \"bolder\" }}\n          >\n            {response.name}, {response.sys.country}\n          </Typography>\n          <Typography variant=\"body1\" style={{ fontFamily: \"-webkit-body\" }}>\n            {dayList[day]} {hour}:{minute}, {year}\n          </Typography>\n          <div\n            style={{\n              display: \"flex\",\n              marginTop: \"20px\"\n            }}\n          >\n            <img src={weather} alt=\"\" width=\"10%\" height=\"10%\" />\n            <Typography variant=\"body1\" style={{ fontFamily: \"-webkit-body\" }}>\n              It's {JSON.stringify(response.main.temp)} degree\n            </Typography>\n            <div style={{ marginLeft: \"30px\" }}>\n              <Typography\n                variant=\"body2\"\n                style={{ fontFamily: \"-webkit-body\" }}\n              >\n                Weather: {JSON.stringify(response.weather[0].description)}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                style={{ fontFamily: \"-webkit-body\" }}\n              >\n                Humidity: {JSON.stringify(response.main.humidity)}%\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                style={{ fontFamily: \"-webkit-body\" }}\n              >\n                Wind: {JSON.stringify(response.wind.speed)}km/h\n              </Typography>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n  render() {\n    const { city, snackBarMessage, snackBarOpen, snackBarVariant } = this.state;\n    const { classes } = this.props;\n    return (\n      <div>\n        <Paper component=\"form\" className={classes.root}>\n          <IconButton className={classes.iconButton} aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <InputBase\n            className={classes.input}\n            placeholder=\"Search  Open Weather Map\"\n            name=\"city\"\n            value={city}\n            onChange={this.handleChange}\n          />\n          <IconButton\n            type=\"submit\"\n            className={classes.iconButton}\n            aria-label=\"search\"\n            onClick={this.handleSubmit}\n          >\n            <SearchIcon />\n          </IconButton>\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"directions\"\n          >\n            <DirectionsIcon />\n          </IconButton>\n        </Paper>\n        <div>{this.renderData()}</div>\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={snackBarOpen}\n          onClose={this.onCloseHandler}\n        >\n          <MysnackBar\n            onClose={this.onCloseHandler}\n            variant={snackBarVariant}\n            message={snackBarMessage}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(Styles)(search);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, Toolbar, CssBaseline, AppBar } from \"@material-ui/core\";\nimport AppBarCollapse from \"./AppBarCollapse\";\nimport Search from \"./Search\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1,\n    color: \"white\"\n  }\n});\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar style={{ backgroundColor: \"#076380\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Weather\n          </Typography>\n          <AppBarCollapse />\n        </Toolbar>\n      </AppBar>\n\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"100px\"\n          }}\n        >\n          <div\n            style={{\n              color: \"#076380\",\n              fontFamily: \"-webkit-body\",\n              textAlign: \"center\"\n            }}\n          >\n            <Typography variant=\"h5\">Get Weather Updates</Typography>\n            <Typography variant=\"h6\">From Around the World</Typography>\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"50px\"\n          }}\n        >\n          <Search />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css'\nimport Main from \"./components/Main\";\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={Main} />\n    </BrowserRouter >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon-weather.ffe69352.png\";"],"sourceRoot":""}